function sum(resource)
	local sum = 0;
	for i, card in pairs(active) do
		local data = json[cardtable[card]];
		for j, effect in pairs(data.effects) do
			if effect.resource == resource and not (effect.add == nil) then
				sum = sum + effect.add;
			end
		end
	end
	return sum;
end

function product(resource)
	local product = 1;
	for i, card in pairs(active) do
		local data = json[cardtable[card]];
		for j, effect in pairs(data.effects) do
			if effect.resource == resource and not (effect.factor == nil) then
				product = product * effect.factor;
			end
		end
	end
	return product;
end

local function tick(self)
	local factor = math.min(food / population, 1);
	influence = (1 + math.sqrt(population * 1 * factor + population * 0.5 * (1 - factor))) * product('influence') + sum('influence');
	if (population < 0.01) then
		influence = 0;	
	end
	start_influence = influence;

	local sum = sum('influence');
	local product = product('influence');
	buffer = '';
	if not (sum == 0) or not (product == 1) then
		buffer = '\nCards       ';
		if not (product == 1) then
			buffer = buffer .. 'x ' .. string.format('%.1f', product) .. ' ';
		end
		if not (sum == 0) then
			if sum < 0 then
				buffer = buffer .. '- ' .. string.format('%.1f', -sum);
			else
				buffer = buffer .. '+ ' .. string.format('%.1f', sum);
			end
		end
	end

	for i, card in pairs(active) do
		msg.post(card, 'tick');
	end
	for i, card in ipairs(hand) do
		if pcall(go.get, card, 'hand') and go.get(card, 'hand') then
			go.delete(card);
		end
	end

	local count = math.ceil(math.sqrt(technology));
	local spend = false;
	for i = 1, count, 1 do
		local card;
		while card == nil do
			local x = math.random(1, 200);
			local rareness;
			if x <= 100 then
				rareness = 1;
			elseif x <= 150 then
				rareness = 2;
			elseif x <= 180 then
				rareness = 3;
			elseif x <= 195 then
				rareness = 4;
			else
				rareness = 5;
			end
			local count = 0;
			local grabbag = {};
			for i, data in pairs(json) do
				if data.rareness == rareness and data.technology <= technology and (data.influence <= start_influence or spend or start_influence < 1) then
					count = count + 1;
					table.insert(grabbag, i);
				end
			end
			if count > 0 then
				spend = true;
				card = grabbag[math.random(1, count)];
			end
		end
		factory.create('/game#factory', vmath.vector3(640 + (i - 0.5 - count / 2) * 120, 100, 0), nil, {card = card, hand = true});
	end

	while people < math.ceil(population * 2) and population > 0.01 do
		people = people + 1;
		factory.create('/earth#factory');
	end
end

function init(self)
	math.randomseed(os.time() - os.clock() * 1000);

	msg.post(".", "acquire_input_focus");
	people = 0;
	population = 0.2;
	co2 = 0;
	food = 0.3;
	technology = 1;
	used = 0;
	json = json.decode(sys.load_resource('/main/data/cards.json'));
	hand = {};
	active = {};
	cardtable = {};
	buffer = '';
	x = 0;
	y = 0;

	msg.post("#sound", "play_sound");

	tick(self);
end

function update(self, dt)
	for i, card in pairs(active) do
		if pcall(go.set_scale, 0.75, card) then
			go.set_position(vmath.vector3(-45 + 95 * (1 + ((i - 1) % 5)), 645 - 155 * math.ceil(i / 5), 0), card);
		else
			active[i] = nil;
		end
	end
end

function on_input(self, action_id, action)
	if action_id == nil then
		x = action.x;
		y = action.y;
	elseif action_id == hash('click') and action.pressed then
		if action.x > 1092.5 and action.x < 1242.5 and action.y > 37.5 and action.y < 112.5 then
			local danger = 1 - co2 / 1000000;
			if danger > 0.99 then
				danger = 1;
			elseif danger < 0 then
				danger = 0;
			end
			co2 = math.max(co2 + population * ((technology * technology - 0.5) * 100) * product('co2') + sum('co2') - 10, 0);
			if population >= 0.01 then
				local tmp = food;
				food = math.max(food + (math.min(food, population) * 0.5 * (technology / 2 + 0.5) * product('food') + sum('food')) * danger - population, 0);
				local factor = math.max(population - tmp, 0);
				if factor > 0 then
					population = math.max(population + ((population / 10) * product('population') + sum('population')) * danger - factor, 0);
				else
					population = math.max(population + ((population / 10) * product('population') + sum('population')) * danger * (1 + (tmp / population - 1) / 5), 0);
				end
				technology = technology + 0.01 * product('technology') + sum('technology');
			end
			if population < 0.01 then
			msg.post("#sound", "stop_sound");
			end
			used = 0;

			msg.post("#paper", "play_sound");
			tick(self);
		end
	end
end
